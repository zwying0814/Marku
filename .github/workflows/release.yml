name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build for Windows
      run: |
        cd server
        GOOS=windows GOARCH=amd64 go build -o marku-server-windows-amd64.exe main.go
        
    - name: Build for Linux
      run: |
        cd server
        GOOS=linux GOARCH=amd64 go build -o marku-server-linux-amd64 main.go
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: |
          ## Changes
          
          - Automated release for version ${{ github.event.inputs.version }}
          - Cross-platform builds for Windows and Linux
          
          ## Downloads
          
          - **Windows**: marku-server-windows-amd64.exe
          - **Linux**: marku-server-linux-amd64
        draft: false
        prerelease: false
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server/marku-server-windows-amd64.exe
        asset_name: marku-server-windows-amd64.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server/marku-server-linux-amd64
        asset_name: marku-server-linux-amd64
        asset_content_type: application/octet-stream